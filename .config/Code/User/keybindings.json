[
    // <----------------- [START] AI ------------------->
    { // Inline edit (VSCode)
        "key": "space e",
        "command": "inlineChat.start",
        "when": "(vim.mode == 'Normal' || vim.mode == 'VisualLine') && editorTextFocus",
    },
    { // Inline edit (Cursor)
        "key": "space e",
        "command": "aipopup.action.modal.generate",
        "when": "(vim.mode == 'Normal' || vim.mode == 'VisualLine') && editorTextFocus && aichatPosition",
    },
    { // Open chat (VSCode)
        "key": "alt+a",
        "command": "workbench.panel.chat.view.copilot.focus",
    },
    { // Open chat (Cursor)
        "key": "alt+a",
        "command": "aichat.newfollowupaction",
        "when": "aichatPosition",
    },
    { // New chat (VSCode)
        "key": "alt+shift+a",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.panel.chat.view.copilot.focus",
                "workbench.action.chat.newChat",
            ]
        },
    },
    { // New chat (Cursor)
        "key": "alt+shift+a",
        "command": "aichat.newchataction",
        "when": "aichatPosition",
    },
    { // Add to chat (VSCode)
        "key": "ctrl+space ctrl+space",
        "command": "github.copilot.chat.attachSelection",
        "when": "vim.mode == 'VisualLine' && editorTextFocus"
    },
    { // Add to chat (Cursor)
        "key": "ctrl+space ctrl+space",
        "command": "aichat.insertselectionintochat",
        "when": "vim.mode == 'VisualLine' && editorTextFocus && aichatPosition"
    },
    { // Close chat (Cursor)
        "key": "alt+q",
        "command": "aichat.newchataction",
        "when": "view.workbench.panel.aichat.view.visible && !editorFocus && !terminalFocus"
    },
    { // Open Copilot Edits (VSCode)
        "key": "alt+c",
        "command": "workbench.action.chat.openEditSession",
    },
    { // Open composer (Cursor)
        "key": "alt+c",
        "command": "composer.openAsPane",
        "when": "aichatPosition",
    },
    { // New Copilot Edits (VSCode)
        "key": "alt+shift+c",
        "command": "workbench.action.chat.newEditSession",
    },
    { // New composer (Cursor)
        "key": "alt+shift+c",
        "command": "composer.createNew",
        "when": "aichatPosition",
    },
    { // Close composer (Cursor)
        "key": "alt+q",
        "command": "aichat.close-sidebar",
        "when": "aichatPosition",
    },
    { // Close chat/Copilot Edits (VSCode)
        "key": "alt+q",
        "command": "workbench.action.closeAuxiliaryBar",
        "when": "auxiliaryBarFocus",
    },
    { // Show chat/Copilot Edits history (VSCode)
        "key": "alt+h",
        "command": "workbench.action.chat.history",
        "when": "workbench.panel.chat.view.copilot.visible || workbench.panel.chat.view.copilot.visible",
    },
    { // Show chat/composer history (Cursor)
        "key": "alt+h",
        "command": "runCommands",
        "args": {
            "commands": [
                "composer.showComposerChatHistory",
                "composer.showComposerHistory",
            ]
        },
        "when": "composerIsEnabled && aichatPosition",
     },
    // <----------------- [END] AI ------------------->
    //
    // <----------------- [START] Search ------------------->
    { // Search
        "key": "space s g",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.view.search.focus",
                "list.focusAnyFirst",
            ]
        },
        "when": "(vim.mode == 'Normal' && editorTextFocus) || (!inputFocus)"
    },
    { // Close search
        "key": "alt+q",
        "command": "workbench.action.closeSidebar",
        "when": "view.workbench.view.search.visible"
    },
    { // Switch file
        "key": "enter",
        "command": "list.focusDown",
        "when": "view.workbench.view.search.visible"
    },
    // <----------------- [END] Search ------------------->
    //
    // <----------------- [START] File explorer ------------------->
    { // Open explorer
        "key": "alt+e",
        "command": "workbench.view.explorer",
        "when": "!filesExplorerFocus && ((vim.mode == 'Normal' && editorTextFocus) || (!inputFocus))"
    },
    { // Close explorer
        "key": "alt+q",
        "command": "workbench.action.closeSidebar",
        "when": "filesExplorerFocus && !inputFocus"
    },
    { // Collapse
        "key": "alt+c",
        "command": "list.collapseAll",
        "when": "filesExplorerFocus && !inputFocus"
    },
    { // Select
        "key": "s",
        "command": "list.toggleSelection",
        "when": "filesExplorerFocus && !inputFocus"
    },
    { // Copy
        "key": "y",
        "command": "filesExplorer.copy",
        "when": "filesExplorerFocus && !inputFocus"
    },
    { // Cut
        "key": "c",
        "command": "filesExplorer.cut",
        "when": "filesExplorerFocus && !inputFocus"
    },
    { // Paste
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "filesExplorerFocus && !inputFocus"
    },
    { // Rename
        "key": "r",
        "command": "renameFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    { // Delete
        "key": "d",
        "command": "deleteFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    // <----------------- [END] File explorer ------------------->
    //
    // <----------------- [START] Navigation ------------------->
    { // Navigate back
        "key": "ctrl+o",
        "command": "workbench.action.navigateBack",
    },
    { // Navigate forward
        "key": "ctrl+i",
        "command": "workbench.action.navigateForward",
    },
    // <----------------- [END] Navigation ------------------->
    //
    // <----------------- [START] Interface ------------------->
    // Decrease view height
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.decreaseViewHeight",
    },
    // Increase view height
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.increaseViewHeight",
    },
    // Decrease view width
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.decreaseViewWidth",
    },
    // Increase view width
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.increaseViewWidth",
    },
    // <----------------- [END] Interface ------------------->
    { // Close terminal and sidebar (VSCode)
        "key": "alt+shift+q",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.closePanel",
                "workbench.action.closeSidebar",
                "workbench.action.closeAuxiliaryBar",
            ],
        },
    },
    { // Close terminal and sidebar (Cursor)
        "key": "alt+shift+q",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.closePanel",
                "workbench.action.closeSidebar",
                "aichat.close-sidebar",
            ],
        },
        "when": "aichatPosition",
    },
    // <----------------- [END] Interface ------------------->
    //
    // <----------------- [Start] Editor ------------------->
    // Focus on editor
    {
        "key": "alt+b",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!editorTextFocus"
    },
    { // Edit keybindings
        "key": "space ,",
        "command": "workbench.action.openGlobalKeybindingsFile",
        "when": "(vim.mode == 'Normal' && editorTextFocus) || (!inputFocus)"
    },
    { // Edit settings
        "key": "space .",
        "command": "workbench.action.openSettingsJson",
        "when": "(vim.mode == 'Normal' && editorTextFocus) || (!inputFocus)"
    },
    { // Show commands
        "key": "F1",
        "command": "workbench.action.showCommands",
        "when": "(vim.mode == 'Normal' && editorTextFocus) || (!inputFocus)"
    },
    { // Open folder
        "key": "space f d",  // 'f' for file, 'd' for directory
        "command": "workbench.action.files.openFolder",
        "when": "(vim.mode == 'Normal' && editorTextFocus) || (!inputFocus)"
    },
    { // Open file
        "key": "space f o",  // 'f' for file, 'o' for open
        "command": "workbench.action.files.openFile",
        "when": "(vim.mode == 'Normal' && editorTextFocus) || (!inputFocus)"
    },
    { // Open recent
        "key": "space f r",  // 'f' for file, 'r' for recent
        "command": "workbench.action.openRecent",
        "when": "(vim.mode == 'Normal' && editorTextFocus) || (!inputFocus)"
    },
    { // Quick open (Ctrl+P)
        "key": "space f f",
        "command": "workbench.action.quickOpen",
        "when": "(vim.mode == 'Normal' && editorTextFocus) || (!inputFocus)"
    },
    { // List open editors
        "key": "space f b",
        "command": "workbench.action.showAllEditors",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    { // Toggle open
        "key": "space tab",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.quickOpenPreviousRecentlyUsedEditor",
                "workbench.action.acceptSelectedQuickOpenItem",
            ],
        },
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    { // Copy file relative
        "key": "space y r",
        "command": "copyRelativeFilePath",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    { // List symbols
        "key": "space l s",
        "command": "workbench.action.gotoSymbol",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    { // Show hover
        "key": "space l h",
        "command": "editor.action.showHover",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    { // Rename symbol
        "key": "space l r",
        "command": "editor.action.rename",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    { // Format document
        "key": "space l shift+f",
        "command": "editor.action.formatDocument",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    { // Comment line
        "key": "space c",
        "command": "editor.action.commentLine",
        "when": "(vim.mode == 'Normal' || vim.mode == 'VisualLine') && editorTextFocus"
    },
    { // Close editors
        "key": "space q",
        "command": "workbench.action.closeActiveEditor",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    { // EasyMotion
        "key": "space space",
        "command": "vim.remap",
        "args": {
            "after": ["<leader>", "<leader>"]
        },
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    { // Move selected lines up
        "key": "space shift+K",
        "command": "editor.action.moveLinesUpAction",
        "when": "vim.mode == 'VisualLine' && editorTextFocus"
    },
    { // Move selected lines down
        "key": "space shift+J",
        "command": "editor.action.moveLinesDownAction",
        "when": "vim.mode == 'VisualLine' && editorTextFocus"
    },
    { // Format selection
        "key": "space l shift+F",
        "command": "editor.action.formatSelection",
        "when": "vim.mode == 'VisualLine' && editorTextFocus"
    },
    { // Toggle word wrap
        "key": "space w",
        "command": "editor.action.toggleWordWrap",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    { // Paste without losing yank
        "key": "space p",
        "command": "vim.remap",
        "args": {
            "after": [
                "p",
                "g",
                "v",
                "y"
            ]
        },
        "when": "(vim.mode == 'VisualLine' || vim.mode == 'Visual') && editorTextFocus"
    },
    // <----------------- [START] Terminal ------------------->
    // Toggle terminal
    {
        "key": "alt+t",
        "command": "workbench.action.terminal.toggleTerminal",
    },
    // New terminal
    {
        "key": "alt+w",
        "command": "workbench.action.terminal.new",
    },
    // Kill terminal
    {
        "key": "alt+q",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    // Switch terminal
    {
        "key": "alt+s",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus",
    },
    // Toggle maximize terminal
    {
        "key": "alt+f",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "terminalFocus",
    },
    // <----------------- [END] Terminal ------------------->
    //
    // <----------------- [START] Git ------------------->
    { // Change branch
        "key": "space g b",
        "command": "git.checkout",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    { // New branch
        "key": "space g c",
        "command": "git.checkout",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    { // Pull (rebase)
        "key": "space g p",
        "command": "git.pullRebase",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    { // Push
        "key": "space g shift+P",
        "command": "git.push",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },
    { // Revert changes
        "key": "space g r",
        "command": "git.revertSelectedRanges",
        "when": "vim.mode == 'Normal' && editorTextFocus"
    },

    { // Lazygit
        "key": "space g l",
        "command": "runCommands",
        "args": {
            "commands": [
                {
                    "command": "workbench.action.terminal.new",
                },
                {
                    "command": "workbench.action.terminal.sendSequence",
                    "args": {
                        "text": "lazygit && exit\n"
                    }
                },
            ],
        },
        "when": "(vim.mode == 'Normal' && editorTextFocus)"
    },
    // <----------------- [END] Git ------------------->
    /////////////////// To test
    {
        "key": "F12",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    },
    // <----------------- [START] Disable ------------------->
    {
        "key": "ctrl+tab",
    },
    // <----------------- [END] Disable ------------------->
]